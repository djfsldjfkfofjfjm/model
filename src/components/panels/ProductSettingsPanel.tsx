import React from 'react';
import { useFinancialContext } from '../../contexts/FinancialContext';
import EditableCell from '../common/EditableCell';
import InfoTooltip from '../common/InfoTooltip';
import MessageUsageFixPanel from './MessageUsageFixPanel';
import DiagnosticPanel from './DiagnosticPanel';
import MessageSystemDiagnostic from './MessageSystemDiagnostic';

const ProductSettingsPanel: React.FC = () => {
  const {
    subscriptionPrice75,
    setSubscriptionPrice75,
    subscriptionPrice150,
    setSubscriptionPrice150,
    subscriptionPrice250,
    setSubscriptionPrice250,
    subscriptionPrice500,
    setSubscriptionPrice500,
    subscriptionPrice1000,
    setSubscriptionPrice1000,
    messages75,
    setMessages75,
    messages150,
    setMessages150,
    messages250,
    setMessages250,
    messages500,
    setMessages500,
    messages1000,
    setMessages1000,
    messageUsagePercentage,
    setMessageUsagePercentage,
    unusedMessagesCarryOver,
    setUnusedMessagesCarryOver,
    additionalMessagePrice,
    setAdditionalMessagePrice,
    integrationPrice,
    setIntegrationPrice,
    maxImplementationCost,
    setMaxImplementationCost,
  } = useFinancialContext();

  const tariffs = [
    {
      name: 'API-only',
      price: subscriptionPrice75,
      setPrice: setSubscriptionPrice75,
      messages: messages75,
      setMessages: setMessages75,
      color: 'purple',
      description: '–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∫ API'
    },
    {
      name: '–ë–∞–∑–æ–≤—ã–π',
      price: subscriptionPrice150,
      setPrice: setSubscriptionPrice150,
      messages: messages150,
      setMessages: setMessages150,
      color: 'blue',
      description: '–î–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤'
    },
    {
      name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
      price: subscriptionPrice250,
      setPrice: setSubscriptionPrice250,
      messages: messages250,
      setMessages: setMessages250,
      color: 'green',
      description: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä'
    },
    {
      name: '–ü—Ä–µ–º–∏—É–º',
      price: subscriptionPrice500,
      setPrice: setSubscriptionPrice500,
      messages: messages500,
      setMessages: setMessages500,
      color: 'orange',
      description: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏'
    },
    {
      name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π',
      price: subscriptionPrice1000,
      setPrice: setSubscriptionPrice1000,
      messages: messages1000,
      setMessages: setMessages1000,
      color: 'red',
      description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏'
    }
  ];

  return (
    <div className="space-y-6">
      {/* –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã */}
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center gap-2">
          –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã
          <InfoTooltip text="–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ü–µ–Ω—ã –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –ø–∞–∫–µ—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞" />
        </h2>

        <div className="overflow-x-auto">
          <table className="w-full">
            <thead>
              <tr className="border-b">
                <th className="text-left py-3 px-4">–¢–∞—Ä–∏—Ñ</th>
                <th className="text-center py-3 px-4">–¶–µ–Ω–∞/–º–µ—Å</th>
                <th className="text-center py-3 px-4">–°–æ–æ–±—â–µ–Ω–∏–π</th>
                <th className="text-center py-3 px-4">$/—Å–æ–æ–±—â–µ–Ω–∏–µ</th>
              </tr>
            </thead>
            <tbody>
              {tariffs.map((tariff, index) => (
                <tr key={index} className="border-b hover:bg-gray-50">
                  <td className="py-4 px-4">
                    <div>
                      <div className={`font-medium text-${tariff.color}-600`}>{tariff.name}</div>
                      <div className="text-sm text-gray-500">{tariff.description}</div>
                    </div>
                  </td>
                  <td className="py-4 px-4 text-center">
                    <EditableCell
                      value={tariff.price}
                      onChange={tariff.setPrice}
                      min={0}
                      max={10000}
                      prefix="$"
                    />
                  </td>
                  <td className="py-4 px-4 text-center">
                    <EditableCell
                      value={tariff.messages}
                      onChange={tariff.setMessages}
                      min={0}
                      max={10000}
                    />
                  </td>
                  <td className="py-4 px-4 text-center text-gray-600">
                    ${(tariff.price / tariff.messages).toFixed(2)}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center gap-2">
          –°–∏—Å—Ç–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
          <InfoTooltip text="–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–π" />
        </h2>

        <div className="grid md:grid-cols-3 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
              <InfoTooltip text="–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π" />
            </label>
            <div className="flex items-center gap-3">
              <EditableCell
                value={messageUsagePercentage}
                onChange={(value) => {
                  console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ % –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:', value);
                  setMessageUsagePercentage(value);
                }}
                min={0}
                max={100}
                suffix="%"
              />
              <span className="text-gray-600"></span>
            </div>
            <p className="text-xs text-gray-500 mt-1">–æ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ü–µ—Ä–µ–Ω–æ—Å –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö
              <InfoTooltip text="–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –ø–µ—Ä–µ–Ω–æ—Å–∏–º—ã—Ö –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü" />
            </label>
            <div className="flex items-center gap-3">
              <EditableCell
                value={unusedMessagesCarryOver}
                onChange={(value) => {
                  console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ % –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:', value);
                  setUnusedMessagesCarryOver(value);
                }}
                min={0}
                max={100}
                suffix="%"
              />
              <span className="text-gray-600"></span>
            </div>
            <p className="text-xs text-gray-500 mt-1">–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¶–µ–Ω–∞ –¥–æ–ø. —Å–æ–æ–±—â–µ–Ω–∏—è
              <InfoTooltip text="–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–≤–µ—Ä—Ö –ø–∞–∫–µ—Ç–∞" />
            </label>
            <div className="flex items-center gap-3">
              <span className="text-gray-600">$</span>
              <EditableCell
                value={additionalMessagePrice}
                onChange={(value) => {
                  console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –¥–æ–ø. —Å–æ–æ–±—â–µ–Ω–∏–π:', value);
                  setAdditionalMessagePrice(value);
                }}
                min={0}
                max={10}
                step={0.01}
              />
            </div>
            <p className="text-xs text-gray-500 mt-1">–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–µ—Ä—Ö –ª–∏–º–∏—Ç–∞</p>
          </div>
        </div>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ */}
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center gap-2">
          –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ
          <InfoTooltip text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ" />
        </h2>

        <div className="grid md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –°—Ç–æ–∏–º–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
              <InfoTooltip text="–ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–∞—è –ø–ª–∞—Ç–∞ –∑–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–æ—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞" />
            </label>
            <div className="flex items-center gap-3">
              <span className="text-gray-600">$</span>
              <EditableCell
                value={integrationPrice}
                onChange={setIntegrationPrice}
                min={0}
                max={10000}
              />
            </div>
            <p className="text-xs text-gray-500 mt-1">–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ú–∞–∫—Å. —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–Ω–µ–¥—Ä–µ–Ω–∏—è
              <InfoTooltip text="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞" />
            </label>
            <div className="flex items-center gap-3">
              <span className="text-gray-600">$</span>
              <EditableCell
                value={maxImplementationCost}
                onChange={setMaxImplementationCost}
                min={0}
                max={1000}
              />
            </div>
            <p className="text-xs text-gray-500 mt-1">20% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</p>
          </div>
        </div>
      </div>
      
      {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <MessageSystemDiagnostic />
    </div>
  );
};

export default ProductSettingsPanel;